/*\/**
 * Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 * This software is the confidential and proprietary information of wavemaker-com * You shall not disclose such Confidential Information and shall use it only in accordance
 * with the terms of the source code license agreement you entered into with wavemaker.com *\/*/

package com.testmssqlimport.adventureworks2014;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name="`Employee`"
    ,schema="HumanResources"
)

public class Employee  implements java.io.Serializable {

    private Integer businessEntityId;
    private String nationalIdnumber;
    private String loginId;
    private byte[] organizationNode;
    private Short organizationLevel;
    private String jobTitle;
    private Date birthDate;
    private String maritalStatus;
    private String gender;
    private Date hireDate;
    private boolean salariedFlag;
    private short vacationHours;
    private short sickLeaveHours;
    private boolean currentFlag;
    private String rowguid;


@Type(type="DateTime")
    private LocalDateTime modifiedDate;
    private Set<JobCandidate> jobCandidates = new HashSet<JobCandidate>(0);
    private Set<EmployeePayHistory> employeePayHistories = new HashSet<EmployeePayHistory>(0);
    private Set<EmployeeDepartmentHistory> employeeDepartmentHistories = new HashSet<EmployeeDepartmentHistory>(0);

    public Employee() {
    }


    @Id 
    

    @Column(name="`BusinessEntityID`", nullable=false)
    public Integer getBusinessEntityId() {
        return this.businessEntityId;
    }
    
    public void setBusinessEntityId(Integer businessEntityId) {
        this.businessEntityId = businessEntityId;
    }

    

    @Column(name="`NationalIDNumber`", nullable=false)
    public String getNationalIdnumber() {
        return this.nationalIdnumber;
    }
    
    public void setNationalIdnumber(String nationalIdnumber) {
        this.nationalIdnumber = nationalIdnumber;
    }

    

    @Column(name="`LoginID`", nullable=false)
    public String getLoginId() {
        return this.loginId;
    }
    
    public void setLoginId(String loginId) {
        this.loginId = loginId;
    }

    

    @Column(name="`OrganizationNode`")
    public byte[] getOrganizationNode() {
        return this.organizationNode;
    }
    
    public void setOrganizationNode(byte[] organizationNode) {
        this.organizationNode = organizationNode;
    }

    

    @Column(name="`OrganizationLevel`")
    public Short getOrganizationLevel() {
        return this.organizationLevel;
    }
    
    public void setOrganizationLevel(Short organizationLevel) {
        this.organizationLevel = organizationLevel;
    }

    

    @Column(name="`JobTitle`", nullable=false)
    public String getJobTitle() {
        return this.jobTitle;
    }
    
    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`BirthDate`", nullable=false, length=10)
    public Date getBirthDate() {
        return this.birthDate;
    }
    
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    

    @Column(name="`MaritalStatus`", nullable=false)
    public String getMaritalStatus() {
        return this.maritalStatus;
    }
    
    public void setMaritalStatus(String maritalStatus) {
        this.maritalStatus = maritalStatus;
    }

    

    @Column(name="`Gender`", nullable=false)
    public String getGender() {
        return this.gender;
    }
    
    public void setGender(String gender) {
        this.gender = gender;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`HireDate`", nullable=false, length=10)
    public Date getHireDate() {
        return this.hireDate;
    }
    
    public void setHireDate(Date hireDate) {
        this.hireDate = hireDate;
    }

    

    @Column(name="`SalariedFlag`", nullable=false)
    public boolean isSalariedFlag() {
        return this.salariedFlag;
    }
    
    public void setSalariedFlag(boolean salariedFlag) {
        this.salariedFlag = salariedFlag;
    }

    

    @Column(name="`VacationHours`", nullable=false)
    public short getVacationHours() {
        return this.vacationHours;
    }
    
    public void setVacationHours(short vacationHours) {
        this.vacationHours = vacationHours;
    }

    

    @Column(name="`SickLeaveHours`", nullable=false)
    public short getSickLeaveHours() {
        return this.sickLeaveHours;
    }
    
    public void setSickLeaveHours(short sickLeaveHours) {
        this.sickLeaveHours = sickLeaveHours;
    }

    

    @Column(name="`CurrentFlag`", nullable=false)
    public boolean isCurrentFlag() {
        return this.currentFlag;
    }
    
    public void setCurrentFlag(boolean currentFlag) {
        this.currentFlag = currentFlag;
    }

    

    @Column(name="`rowguid`", nullable=false, length=36)
    public String getRowguid() {
        return this.rowguid;
    }
    
    public void setRowguid(String rowguid) {
        this.rowguid = rowguid;
    }

    

    @Column(name="`ModifiedDate`", nullable=false, length=23)
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<JobCandidate> getJobCandidates() {
        return this.jobCandidates;
    }
    
    public void setJobCandidates(Set<JobCandidate> jobCandidates) {
        this.jobCandidates = jobCandidates;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeePayHistory> getEmployeePayHistories() {
        return this.employeePayHistories;
    }
    
    public void setEmployeePayHistories(Set<EmployeePayHistory> employeePayHistories) {
        this.employeePayHistories = employeePayHistories;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="employee")
    public Set<EmployeeDepartmentHistory> getEmployeeDepartmentHistories() {
        return this.employeeDepartmentHistories;
    }
    
    public void setEmployeeDepartmentHistories(Set<EmployeeDepartmentHistory> employeeDepartmentHistories) {
        this.employeeDepartmentHistories = employeeDepartmentHistories;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Employee) )
		    return false;

		 Employee that = (Employee) o;

		 return ( (this.getBusinessEntityId()==that.getBusinessEntityId()) || ( this.getBusinessEntityId()!=null && that.getBusinessEntityId()!=null && this.getBusinessEntityId().equals(that.getBusinessEntityId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getBusinessEntityId() == null ? 0 : this.getBusinessEntityId().hashCode() );

         return result;
    }


}

