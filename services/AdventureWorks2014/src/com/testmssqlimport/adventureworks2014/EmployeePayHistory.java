/*\/**
 * Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 * This software is the confidential and proprietary information of wavemaker-com * You shall not disclose such Confidential Information and shall use it only in accordance
 * with the terms of the source code license agreement you entered into with wavemaker.com *\/*/

package com.testmssqlimport.adventureworks2014;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * EmployeePayHistory generated by hbm2java
 */
@Entity
@Table(name="`EmployeePayHistory`"
    ,schema="HumanResources"
)
@IdClass(value=EmployeePayHistoryId.class)
public class EmployeePayHistory  implements java.io.Serializable {

    private Integer businessEntityId;


@Type(type="DateTime")
    private LocalDateTime rateChangeDate;
    private BigDecimal rate;
    private byte payFrequency;


@Type(type="DateTime")
    private LocalDateTime modifiedDate;
    private Employee employee;

    public EmployeePayHistory() {
    }


    @Id 
    

    @Column(name="`BusinessEntityID`", nullable=false, insertable=false, updatable=false)
    public Integer getBusinessEntityId() {
        return this.businessEntityId;
    }
    
    public void setBusinessEntityId(Integer businessEntityId) {
        this.businessEntityId = businessEntityId;
    }
    @Id 
    

    @Column(name="`RateChangeDate`", nullable=false, insertable=false, updatable=false, length=23)
    public LocalDateTime getRateChangeDate() {
        return this.rateChangeDate;
    }
    
    public void setRateChangeDate(LocalDateTime rateChangeDate) {
        this.rateChangeDate = rateChangeDate;
    }

    

    @Column(name="`Rate`", nullable=false)
    public BigDecimal getRate() {
        return this.rate;
    }
    
    public void setRate(BigDecimal rate) {
        this.rate = rate;
    }

    

    @Column(name="`PayFrequency`", nullable=false)
    public byte getPayFrequency() {
        return this.payFrequency;
    }
    
    public void setPayFrequency(byte payFrequency) {
        this.payFrequency = payFrequency;
    }

    

    @Column(name="`ModifiedDate`", nullable=false, length=23)
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`BusinessEntityID`", nullable=false, insertable=false, updatable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        
        this.businessEntityId = employee.getBusinessEntityId();
      
        this.employee = employee;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof EmployeePayHistory) )
		    return false;

		 EmployeePayHistory that = (EmployeePayHistory) o;

         return ( (this.getBusinessEntityId()==that.getBusinessEntityId()) || ( this.getBusinessEntityId()!=null && that.getBusinessEntityId()!=null && this.getBusinessEntityId().equals(that.getBusinessEntityId()) ) )
 && ( (this.getRateChangeDate()==that.getRateChangeDate()) || ( this.getRateChangeDate()!=null && that.getRateChangeDate()!=null && this.getRateChangeDate().equals(that.getRateChangeDate()) ) )
 && ( (this.getRate()==that.getRate()) || ( this.getRate()!=null && that.getRate()!=null && this.getRate().equals(that.getRate()) ) )
 && (this.getPayFrequency()==that.getPayFrequency())
 && ( (this.getModifiedDate()==that.getModifiedDate()) || ( this.getModifiedDate()!=null && that.getModifiedDate()!=null && this.getModifiedDate().equals(that.getModifiedDate()) ) )
 && ( (this.getEmployee()==that.getEmployee()) || ( this.getEmployee()!=null && that.getEmployee()!=null && this.getEmployee().equals(that.getEmployee()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getBusinessEntityId() == null ? 0 : this.getBusinessEntityId().hashCode() );
         result = 37 * result + ( getRateChangeDate() == null ? 0 : this.getRateChangeDate().hashCode() );
         result = 37 * result + ( getRate() == null ? 0 : this.getRate().hashCode() );
         result = 37 * result + this.getPayFrequency();
         result = 37 * result + ( getModifiedDate() == null ? 0 : this.getModifiedDate().hashCode() );
         result = 37 * result + ( getEmployee() == null ? 0 : this.getEmployee().hashCode() );

         return result;
    }


}

