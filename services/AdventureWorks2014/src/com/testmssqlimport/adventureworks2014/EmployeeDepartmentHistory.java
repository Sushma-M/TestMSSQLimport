/*\/**
 * Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 * This software is the confidential and proprietary information of wavemaker-com * You shall not disclose such Confidential Information and shall use it only in accordance
 * with the terms of the source code license agreement you entered into with wavemaker.com *\/*/

package com.testmssqlimport.adventureworks2014;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * EmployeeDepartmentHistory generated by hbm2java
 */
@Entity
@Table(name="`EmployeeDepartmentHistory`"
    ,schema="HumanResources"
)
@IdClass(value=EmployeeDepartmentHistoryId.class)
public class EmployeeDepartmentHistory  implements java.io.Serializable {

    private Integer businessEntityId;
    private Date startDate;
    private short departmentId;
    private byte shiftId;
    private Date endDate;


@Type(type="DateTime")
    private LocalDateTime modifiedDate;
    private Department department;
    private Employee employee;
    private Shift shift;

    public EmployeeDepartmentHistory() {
    }


    @Id 
    

    @Column(name="`BusinessEntityID`", nullable=false, insertable=false, updatable=false)
    public Integer getBusinessEntityId() {
        return this.businessEntityId;
    }
    
    public void setBusinessEntityId(Integer businessEntityId) {
        this.businessEntityId = businessEntityId;
    }
    @Id 
    @Temporal(TemporalType.DATE)

    @Column(name="`StartDate`", nullable=false, insertable=false, updatable=false, length=10)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }
    @Id 
    

    @Column(name="`DepartmentID`", nullable=false, insertable=false, updatable=false)
    public short getDepartmentId() {
        return this.departmentId;
    }
    
    public void setDepartmentId(short departmentId) {
        this.departmentId = departmentId;
    }
    @Id 
    

    @Column(name="`ShiftID`", nullable=false, insertable=false, updatable=false)
    public byte getShiftId() {
        return this.shiftId;
    }
    
    public void setShiftId(byte shiftId) {
        this.shiftId = shiftId;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`EndDate`", length=10)
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    

    @Column(name="`ModifiedDate`", nullable=false, length=23)
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`DepartmentID`", nullable=false, insertable=false, updatable=false)
    public Department getDepartment() {
        return this.department;
    }
    
    public void setDepartment(Department department) {
        
        this.departmentId = department.getDepartmentId();
      
        this.department = department;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`BusinessEntityID`", nullable=false, insertable=false, updatable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        
        this.businessEntityId = employee.getBusinessEntityId();
      
        this.employee = employee;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`ShiftID`", nullable=false, insertable=false, updatable=false)
    public Shift getShift() {
        return this.shift;
    }
    
    public void setShift(Shift shift) {
        
        this.shiftId = shift.getShiftId();
      
        this.shift = shift;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof EmployeeDepartmentHistory) )
		    return false;

		 EmployeeDepartmentHistory that = (EmployeeDepartmentHistory) o;

         return ( (this.getBusinessEntityId()==that.getBusinessEntityId()) || ( this.getBusinessEntityId()!=null && that.getBusinessEntityId()!=null && this.getBusinessEntityId().equals(that.getBusinessEntityId()) ) )
 && ( (this.getStartDate()==that.getStartDate()) || ( this.getStartDate()!=null && that.getStartDate()!=null && this.getStartDate().equals(that.getStartDate()) ) )
 && (this.getDepartmentId()==that.getDepartmentId())
 && (this.getShiftId()==that.getShiftId())
 && ( (this.getEndDate()==that.getEndDate()) || ( this.getEndDate()!=null && that.getEndDate()!=null && this.getEndDate().equals(that.getEndDate()) ) )
 && ( (this.getModifiedDate()==that.getModifiedDate()) || ( this.getModifiedDate()!=null && that.getModifiedDate()!=null && this.getModifiedDate().equals(that.getModifiedDate()) ) )
 && ( (this.getDepartment()==that.getDepartment()) || ( this.getDepartment()!=null && that.getDepartment()!=null && this.getDepartment().equals(that.getDepartment()) ) )
 && ( (this.getEmployee()==that.getEmployee()) || ( this.getEmployee()!=null && that.getEmployee()!=null && this.getEmployee().equals(that.getEmployee()) ) )
 && ( (this.getShift()==that.getShift()) || ( this.getShift()!=null && that.getShift()!=null && this.getShift().equals(that.getShift()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getBusinessEntityId() == null ? 0 : this.getBusinessEntityId().hashCode() );
         result = 37 * result + ( getStartDate() == null ? 0 : this.getStartDate().hashCode() );
         result = 37 * result + this.getDepartmentId();
         result = 37 * result + this.getShiftId();
         result = 37 * result + ( getEndDate() == null ? 0 : this.getEndDate().hashCode() );
         result = 37 * result + ( getModifiedDate() == null ? 0 : this.getModifiedDate().hashCode() );
         result = 37 * result + ( getDepartment() == null ? 0 : this.getDepartment().hashCode() );
         result = 37 * result + ( getEmployee() == null ? 0 : this.getEmployee().hashCode() );
         result = 37 * result + ( getShift() == null ? 0 : this.getShift().hashCode() );

         return result;
    }


}

