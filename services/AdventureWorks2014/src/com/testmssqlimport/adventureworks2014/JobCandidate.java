/*\/**
 * Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 * This software is the confidential and proprietary information of wavemaker-com * You shall not disclose such Confidential Information and shall use it only in accordance
 * with the terms of the source code license agreement you entered into with wavemaker.com *\/*/

package com.testmssqlimport.adventureworks2014;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import org.hibernate.annotations.Type;
import org.joda.time.LocalDateTime;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * JobCandidate generated by hbm2java
 */
@Entity
@Table(name="`JobCandidate`"
    ,schema="HumanResources"
)

public class JobCandidate  implements java.io.Serializable {

    private Integer jobCandidateId;
    private String resume;


@Type(type="DateTime")
    private LocalDateTime modifiedDate;
    private Employee employee;

    public JobCandidate() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`JobCandidateID`", nullable=false)
    public Integer getJobCandidateId() {
        return this.jobCandidateId;
    }
    
    public void setJobCandidateId(Integer jobCandidateId) {
        this.jobCandidateId = jobCandidateId;
    }

    

    @Column(name="`Resume`")
    public String getResume() {
        return this.resume;
    }
    
    public void setResume(String resume) {
        this.resume = resume;
    }

    

    @Column(name="`ModifiedDate`", nullable=false, length=23)
    public LocalDateTime getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(LocalDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`BusinessEntityID`", nullable=false)
    public Employee getEmployee() {
        return this.employee;
    }
    
    public void setEmployee(Employee employee) {
        this.employee = employee;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof JobCandidate) )
		    return false;

		 JobCandidate that = (JobCandidate) o;

		 return ( (this.getJobCandidateId()==that.getJobCandidateId()) || ( this.getJobCandidateId()!=null && that.getJobCandidateId()!=null && this.getJobCandidateId().equals(that.getJobCandidateId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getJobCandidateId() == null ? 0 : this.getJobCandidateId().hashCode() );

         return result;
    }


}

