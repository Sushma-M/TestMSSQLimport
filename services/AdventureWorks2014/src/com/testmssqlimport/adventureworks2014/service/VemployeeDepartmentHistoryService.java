/*\/**
 * Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 * This software is the confidential and proprietary information of wavemaker-com * You shall not disclose such Confidential Information and shall use it only in accordance
 * with the terms of the source code license agreement you entered into with wavemaker.com *\/*/

package com.testmssqlimport.adventureworks2014.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.testmssqlimport.adventureworks2014.*;

/**
 * Service object for domain model class VemployeeDepartmentHistory.
 * @see com.testmssqlimport.adventureworks2014.VemployeeDepartmentHistory
 */

public interface VemployeeDepartmentHistoryService {
   /**
	 * Creates a new vemployeedepartmenthistory.
	 * 
	 * @param created
	 *            The information of the created vemployeedepartmenthistory.
	 * @return The created vemployeedepartmenthistory.
	 */
	public VemployeeDepartmentHistory create(VemployeeDepartmentHistory created);

	/**
	 * Deletes a vemployeedepartmenthistory.
	 * 
	 * @param vemployeedepartmenthistoryId
	 *            The id of the deleted vemployeedepartmenthistory.
	 * @return The deleted vemployeedepartmenthistory.
	 * @throws EntityNotFoundException
	 *             if no vemployeedepartmenthistory is found with the given id.
	 */
	public VemployeeDepartmentHistory delete(VemployeeDepartmentHistoryId vemployeedepartmenthistoryId) throws EntityNotFoundException;

	/**
	 * Finds all vemployeedepartmenthistorys.
	 * 
	 * @return A list of vemployeedepartmenthistorys.
	 */
	public Page<VemployeeDepartmentHistory> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<VemployeeDepartmentHistory> findAll(Pageable pageable);
	
	/**
	 * Finds vemployeedepartmenthistory by id.
	 * 
	 * @param id
	 *            The id of the wanted vemployeedepartmenthistory.
	 * @return The found vemployeedepartmenthistory. If no vemployeedepartmenthistory is found, this method returns
	 *         null.
	 */
	public VemployeeDepartmentHistory findById(VemployeeDepartmentHistoryId id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a vemployeedepartmenthistory.
	 * 
	 * @param updated
	 *            The information of the updated vemployeedepartmenthistory.
	 * @return The updated vemployeedepartmenthistory.
	 * @throws EntityNotFoundException
	 *             if no vemployeedepartmenthistory is found with given id.
	 */
	public VemployeeDepartmentHistory update(VemployeeDepartmentHistory updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the vemployeedepartmenthistorys in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the vemployeedepartmenthistory.
	 */

	public long countAll();


    public Page<VemployeeDepartmentHistory> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

