/*\/**
 * Copyright (c) 2015-2016 wavemaker.com All Rights Reserved.
 * This software is the confidential and proprietary information of wavemaker-com * You shall not disclose such Confidential Information and shall use it only in accordance
 * with the terms of the source code license agreement you entered into with wavemaker.com *\/*/

package com.testmssqlimport.adventureworks2014.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.testmssqlimport.adventureworks2014.*;

/**
 * Service object for domain model class Table13.
 * @see com.testmssqlimport.adventureworks2014.Table13
 */

public interface Table13Service {
   /**
	 * Creates a new table13.
	 * 
	 * @param created
	 *            The information of the created table13.
	 * @return The created table13.
	 */
	public Table13 create(Table13 created);

	/**
	 * Deletes a table13.
	 * 
	 * @param table13Id
	 *            The id of the deleted table13.
	 * @return The deleted table13.
	 * @throws EntityNotFoundException
	 *             if no table13 is found with the given id.
	 */
	public Table13 delete(Integer table13Id) throws EntityNotFoundException;

	/**
	 * Finds all table13s.
	 * 
	 * @return A list of table13s.
	 */
	public Page<Table13> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<Table13> findAll(Pageable pageable);
	
	/**
	 * Finds table13 by id.
	 * 
	 * @param id
	 *            The id of the wanted table13.
	 * @return The found table13. If no table13 is found, this method returns
	 *         null.
	 */
	public Table13 findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a table13.
	 * 
	 * @param updated
	 *            The information of the updated table13.
	 * @return The updated table13.
	 * @throws EntityNotFoundException
	 *             if no table13 is found with given id.
	 */
	public Table13 update(Table13 updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the table13s in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the table13.
	 */

	public long countAll();


    public Page<Table13> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

